// <auto-generated />
using System;
using BETripWay.CapaNegocio;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BETripWay.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240723044619_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BETripWay.CapaNegocio.Aeropuerto", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Abreviatura")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Ciudad")
                        .HasColumnType("int");

                    b.Property<string>("CiudadNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("Transporte")
                        .HasColumnType("bit");

                    b.HasKey("Id")
                        .HasName("PK__Aeropuer__3214EC0735712352");

                    b.HasIndex("Ciudad");

                    b.ToTable("Aeropuerto", (string)null);
                });

            modelBuilder.Entity("BETripWay.CapaNegocio.Cdestino", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Valor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Cdestino__3214EC07886B42BA");

                    b.ToTable("Cdestino", (string)null);
                });

            modelBuilder.Entity("BETripWay.CapaNegocio.Ciudad", b =>
                {
                    b.Property<int>("IdCiudad")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PaisId")
                        .HasColumnType("int");

                    b.HasKey("IdCiudad")
                        .HasName("PK__Ciudad__D4D3CCB0BFDBC68B");

                    b.HasIndex("PaisId");

                    b.ToTable("Ciudad", (string)null);
                });

            modelBuilder.Entity("BETripWay.CapaNegocio.Comentario", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("CedulaUsuario")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ComentarioTexto")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id")
                        .HasName("PK__Comentar__3214EC07146B4C51");

                    b.HasIndex("CedulaUsuario");

                    b.ToTable("Comentario", (string)null);
                });

            modelBuilder.Entity("BETripWay.CapaNegocio.Equipaje", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CedulaUsuario")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double>("Peso")
                        .HasColumnType("float");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Equipaje__3214EC07953104C1");

                    b.HasIndex("CedulaUsuario");

                    b.ToTable("Equipaje", (string)null);
                });

            modelBuilder.Entity("BETripWay.CapaNegocio.Habitacion", b =>
                {
                    b.Property<int>("IdHabitaciones")
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHabitaciones"));

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<string>("CedulaUsuario")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int?>("IdHotel")
                        .HasColumnType("int");

                    b.Property<string>("TipoHabitacion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdHabitaciones")
                        .HasName("PK__Habitaci__2CD071588BE05988");

                    b.HasIndex("CedulaUsuario");

                    b.HasIndex("IdHotel");

                    b.ToTable("Habitacion", (string)null);
                });

            modelBuilder.Entity("BETripWay.CapaNegocio.Hotel", b =>
                {
                    b.Property<int>("IdHotel")
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHotel"));

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int?>("IdCiudad")
                        .HasColumnType("int");

                    b.Property<int>("Nhabitaciones")
                        .HasColumnType("int");

                    b.HasKey("IdHotel")
                        .HasName("PK__Hotel__653BCCC4CF2CC5AA");

                    b.HasIndex("IdCiudad");

                    b.ToTable("Hotel", (string)null);
                });

            modelBuilder.Entity("BETripWay.CapaNegocio.MetodoPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cvc")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Expiracion")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("NombreTitular")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NumeroTarjeta")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__MetodoPa__3214EC071BBAAFCF");

                    b.ToTable("MetodoPago", (string)null);
                });

            modelBuilder.Entity("BETripWay.CapaNegocio.Pai", b =>
                {
                    b.Property<int>("PaisId")
                        .HasColumnType("int");

                    b.Property<string>("CodigoPais")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PaisId")
                        .HasName("PK__Pais__B501E185364AF088");

                    b.ToTable("Pais");
                });

            modelBuilder.Entity("BETripWay.CapaNegocio.Pasajero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("ReservaId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Pasajero__3214EC076178DB44");

                    b.HasIndex("ReservaId");

                    b.ToTable("Pasajero", (string)null);
                });

            modelBuilder.Entity("BETripWay.CapaNegocio.Promocion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Promocio__3214EC079C00B309");

                    b.ToTable("Promocion", (string)null);
                });

            modelBuilder.Entity("BETripWay.CapaNegocio.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CiudadOrigen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Clase")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FechaIda")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaRegreso")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Viaje")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Reserva__3214EC0702DFC0E4");

                    b.ToTable("Reserva", (string)null);
                });

            modelBuilder.Entity("BETripWay.CapaNegocio.Usuario", b =>
                {
                    b.Property<string>("CedulaUsuario")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Contrasenia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CorreoElectronico")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateOnly>("FechaNacimiento")
                        .HasColumnType("date");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PaisResidencia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CedulaUsuario")
                        .HasName("PK__Usuario__C0B559BC7CA1F68E");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("BETripWay.CapaNegocio.Vuelo", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int?>("Cdestino")
                        .HasColumnType("int")
                        .HasColumnName("CDestino");

                    b.Property<int?>("Corigen")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fpartida")
                        .HasColumnType("datetime")
                        .HasColumnName("FPartida");

                    b.Property<int>("Naeropuerto")
                        .HasColumnType("int")
                        .HasColumnName("NAeropuerto");

                    b.Property<bool>("Nocturno")
                        .HasColumnType("bit");

                    b.Property<string>("Nvuelo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NVuelo");

                    b.HasKey("Id")
                        .HasName("PK__Vuelo__3214EC07BF48FBF9");

                    b.HasIndex("Cdestino");

                    b.HasIndex("Corigen");

                    b.HasIndex("Naeropuerto");

                    b.ToTable("Vuelo", (string)null);
                });

            modelBuilder.Entity("BETripWay.CapaNegocio.Aeropuerto", b =>
                {
                    b.HasOne("BETripWay.CapaNegocio.Ciudad", "CiudadNavigation")
                        .WithMany("Aeropuertos")
                        .HasForeignKey("Ciudad")
                        .IsRequired()
                        .HasConstraintName("FK__Aeropuert__Ciuda__10566F31");

                    b.Navigation("CiudadNavigation");
                });

            modelBuilder.Entity("BETripWay.CapaNegocio.Ciudad", b =>
                {
                    b.HasOne("BETripWay.CapaNegocio.Pai", "Pais")
                        .WithMany("Ciudads")
                        .HasForeignKey("PaisId")
                        .HasConstraintName("FK__Ciudad__PaisId__6754599E");

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("BETripWay.CapaNegocio.Comentario", b =>
                {
                    b.HasOne("BETripWay.CapaNegocio.Usuario", "CedulaUsuarioNavigation")
                        .WithMany("Comentarios")
                        .HasForeignKey("CedulaUsuario")
                        .HasConstraintName("FK__Comentari__Cedul__0B91BA14");

                    b.Navigation("CedulaUsuarioNavigation");
                });

            modelBuilder.Entity("BETripWay.CapaNegocio.Equipaje", b =>
                {
                    b.HasOne("BETripWay.CapaNegocio.Usuario", "CedulaUsuarioNavigation")
                        .WithMany("Equipajes")
                        .HasForeignKey("CedulaUsuario")
                        .HasConstraintName("FK__Equipaje__Cedula__08B54D69");

                    b.Navigation("CedulaUsuarioNavigation");
                });

            modelBuilder.Entity("BETripWay.CapaNegocio.Habitacion", b =>
                {
                    b.HasOne("BETripWay.CapaNegocio.Usuario", "CedulaUsuarioNavigation")
                        .WithMany("Habitacions")
                        .HasForeignKey("CedulaUsuario")
                        .HasConstraintName("FK__Habitacio__Cedul__05D8E0BE");

                    b.HasOne("BETripWay.CapaNegocio.Hotel", "IdHotelNavigation")
                        .WithMany("Habitacions")
                        .HasForeignKey("IdHotel")
                        .HasConstraintName("FK__Habitacio__IdHot__04E4BC85");

                    b.Navigation("CedulaUsuarioNavigation");

                    b.Navigation("IdHotelNavigation");
                });

            modelBuilder.Entity("BETripWay.CapaNegocio.Hotel", b =>
                {
                    b.HasOne("BETripWay.CapaNegocio.Ciudad", "IdCiudadNavigation")
                        .WithMany("Hotels")
                        .HasForeignKey("IdCiudad")
                        .HasConstraintName("FK__Hotel__IdCiudad__02084FDA");

                    b.Navigation("IdCiudadNavigation");
                });

            modelBuilder.Entity("BETripWay.CapaNegocio.Pasajero", b =>
                {
                    b.HasOne("BETripWay.CapaNegocio.Reserva", "Reserva")
                        .WithMany("Pasajeros")
                        .HasForeignKey("ReservaId")
                        .HasConstraintName("FK__Pasajero__Reserv__7B5B524B");

                    b.Navigation("Reserva");
                });

            modelBuilder.Entity("BETripWay.CapaNegocio.Vuelo", b =>
                {
                    b.HasOne("BETripWay.CapaNegocio.Cdestino", "CdestinoNavigation")
                        .WithMany("Vuelos")
                        .HasForeignKey("Cdestino")
                        .HasConstraintName("FK__Vuelo__CDestino__32AB8735");

                    b.HasOne("BETripWay.CapaNegocio.Ciudad", "CorigenNavigation")
                        .WithMany("Vuelos")
                        .HasForeignKey("Corigen")
                        .HasConstraintName("FK__Vuelo__Corigen__31B762FC");

                    b.HasOne("BETripWay.CapaNegocio.Aeropuerto", "NaeropuertoNavigation")
                        .WithMany("Vuelos")
                        .HasForeignKey("Naeropuerto")
                        .IsRequired()
                        .HasConstraintName("FK__Vuelo__NAeropuer__339FAB6E");

                    b.Navigation("CdestinoNavigation");

                    b.Navigation("CorigenNavigation");

                    b.Navigation("NaeropuertoNavigation");
                });

            modelBuilder.Entity("BETripWay.CapaNegocio.Aeropuerto", b =>
                {
                    b.Navigation("Vuelos");
                });

            modelBuilder.Entity("BETripWay.CapaNegocio.Cdestino", b =>
                {
                    b.Navigation("Vuelos");
                });

            modelBuilder.Entity("BETripWay.CapaNegocio.Ciudad", b =>
                {
                    b.Navigation("Aeropuertos");

                    b.Navigation("Hotels");

                    b.Navigation("Vuelos");
                });

            modelBuilder.Entity("BETripWay.CapaNegocio.Hotel", b =>
                {
                    b.Navigation("Habitacions");
                });

            modelBuilder.Entity("BETripWay.CapaNegocio.Pai", b =>
                {
                    b.Navigation("Ciudads");
                });

            modelBuilder.Entity("BETripWay.CapaNegocio.Reserva", b =>
                {
                    b.Navigation("Pasajeros");
                });

            modelBuilder.Entity("BETripWay.CapaNegocio.Usuario", b =>
                {
                    b.Navigation("Comentarios");

                    b.Navigation("Equipajes");

                    b.Navigation("Habitacions");
                });
#pragma warning restore 612, 618
        }
    }
}
